(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{226:function(s,t,a){s.exports=a.p+"assets/img/5_9.fa972a46.png"},271:function(s,t,a){"use strict";a.r(t);var n=a(0),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h4",{attrs:{id:"_5-5-3-for循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-3-for循环"}},[s._v("#")]),s._v(" 5.5.3 for循环")]),s._v(" "),n("p",[s._v("for语句的使用极为灵活，可以完全取代while循环。它不仅可以用于循环次数确定的情况，而且可用于循环次数不确定而只是给出循环条件的情况。其一般形式为：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表达式"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 表达式"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 表达式"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 语句\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("for语句的流程图如图5.9所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(226),alt:"图5.9 for语句的流程图"}})]),s._v(" "),n("ul",[n("li",[s._v("图5.9 for语句的流程图")])]),s._v(" "),n("p",[s._v("功能描述：先求解表达式1，一般情况下，表达式1为循环结构的初始化语句，给循环计数器赋初始值。然后求解表达式2，若其值为假，则终止循环；若其值为真，则执行for语句中的内嵌语句。内嵌语句执行完后，求解表达式3.最后继续求解表达式2，根据求解值进行判断，直到表达式的值为假。")]),s._v(" "),n("p",[s._v("for语句最简单也是最经典的形式如下。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("循环变量赋初值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 循环条件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 循环变量增量"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 语句\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("循环变量赋初值总是一个赋值语句，用来给循环控制变量赋初值。循环条件是一个关系表达式，决定什么时候退出循环。循环变量的增量用来定义循环控制变量每次循环后按什么方式变化。这3各部分之间用分号隔开。")]),s._v(" "),n("p",[s._v("for循环语句的一般形式可用while语句进行解释，如下。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("表达式"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表达式"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    语句\n    表达式"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("或者用do-while语句解释如下。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("表达式"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    语句\n    表达式"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表达式"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("在使用for语句时要注意以下几点。")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("for循环中的表达式1、表达式2和表达式3都是选择项，但是分号不能省略。")])]),s._v(" "),n("li",[n("p",[s._v("若3个表达式都省略，则for循环编程for( ; ; ; )，相当于while(1)死循环。")])]),s._v(" "),n("li",[n("p",[s._v("表达式2一般是关系表达式或逻辑表达式，但也可以是数值表达式或字符表达式，只要其值非零，就执行循环体。")])])]),s._v(" "),n("p",[s._v("下面我们来解析一下前面的绘制棋盘的程序。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fillRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fillRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("strokeRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("strokeRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("这个程序实际上是两个for循环嵌套在一起的。第一个for循环的表达式1设定了变量j的初始值为0，然后判断j当前的值是不是小于4，现在j的值为0，当然表达式2是成立的，这样就会执行大括号中的代码。")]),s._v(" "),n("p",[s._v("在第一个for循环的大括号代码中，是第二个for循环。第二个for循环的表达式1是设定变量i的初始值为0，然后判断i的当前值是不是小于4，现在i的值为0，当然表达式2是成立的，这样就会执行大括号中的代码。")]),s._v(" "),n("p",[s._v("这里会绘制两个方框和两个方块，由于现在i和j的值都是0，所以方块的位置是（0，0）和（40，40），而方框的位置是（40，0）和（0，40）。\n我们用位子的形式表现方块和方框的位置如下。")]),s._v(" "),n("p",[n("span",{staticStyle:{color:"red"}},[s._v("方块")]),s._v(" "),n("span",{staticStyle:{color:"red"}},[s._v("方框")]),n("br"),s._v(" "),n("span",{staticStyle:{color:"red"}},[s._v("方框")]),s._v(" "),n("span",{staticStyle:{color:"red"}},[s._v("方块")])]),s._v(" "),n("p",[s._v("这样，第二个for循环的内嵌语句就算执行完了，接着就会运行第二个for循环的表达式3，这里是将i的值加1.运行完表达式3之后，又会判断i的当前值是不是小于4，现在i的值为1，表达式2依然成立，这样就会执行大括号中的代码。")]),s._v(" "),n("p",[s._v("这里优惠绘制两个方框和两个方块，由于现在i的值是1，j的值还是0，所以，方块的位置是（80，0）和（120，40），而方框的位置是（120，0）和（80，40）。")]),s._v(" "),n("p",[s._v("我们用文字的形式表现方块和方框的位置如下（红色部分是新绘制的部分）")]),s._v(" "),n("p",[s._v("方块 方框 "),n("span",{staticStyle:{color:"red"}},[s._v("方块")]),s._v(" "),n("span",{staticStyle:{color:"red"}},[s._v("方框")]),n("br"),s._v("\n方框 方块 "),n("span",{staticStyle:{color:"red"}},[s._v("方框")]),s._v(" "),n("span",{staticStyle:{color:"red"}},[s._v("方块")])]),s._v(" "),n("p",[s._v("这样第二个for循环的内嵌语句又运行了一遍，接着又会运行第2个for循环的表达式3，这里是将i的值加1.运行完表达式3之后，又会判断ID当前值是不是小于4，现在i的值为2，表达式2依然成立，这样就会执行大括号中的代码。")]),s._v(" "),n("p",[s._v("这里还是绘制两个方框和两个方块，由于现在i的值是2，j的值还是0，所以方块的位置是（160，0）和（200，40），而方框的位置是（200，0）和（160，40）。")]),s._v(" "),n("p",[s._v("我们用文字的形式表现方块和方框的位置如下（红色部分是新绘制的部分）")]),s._v(" "),n("p",[s._v("方块 方框 方块 方框 "),n("span",{staticStyle:{color:"red"}},[s._v("方块")]),s._v(" "),n("span",{staticStyle:{color:"red"}},[s._v("方框")]),n("br"),s._v("\n方框 方块 方框 方块 "),n("span",{staticStyle:{color:"red"}},[s._v("方框")]),s._v(" "),n("span",{staticStyle:{color:"red"}},[s._v("方块")])]),s._v(" "),n("p",[s._v("再往下i又会加1，这样i的值就变成了3，依然小于4，同样还会在后面绘制两个方块和方框，用文字的形式表现方块和方框的位置如下。")]),s._v(" "),n("p",[s._v("方块 方框 方块 方框 方块 方框 "),n("span",{staticStyle:{color:"red"}},[s._v("方块")]),s._v(" "),n("span",{staticStyle:{color:"red"}},[s._v("方框")]),n("br"),s._v("\n方框 方块 方框 方块 方框 方块 "),n("span",{staticStyle:{color:"red"}},[s._v("方框")]),s._v(" "),n("span",{staticStyle:{color:"red"}},[s._v("方块")])]),s._v(" "),n("p",[s._v("这时请注意，再加1等于4，此时第二个for循环的表达式2就不成立了，这样这个for循环也就执行完了，这表示第一个for循环中的内嵌代码执行完了，接着会运行第一个for循环的表达式3，即将j的值加1.")]),s._v(" "),n("p",[s._v("运行完第一个for循环的表达式3之后，就会判断第一个for循环的表达式2，此时j的值为1，当然还是小于4的，第一个for循环的表达式2成立，这样优惠运行循环中的内嵌代码，注意此时会重新从0开始赋值。")]),s._v(" "),n("p",[s._v("这段内嵌代码会绘制第三行和第四行方块和方框。以此类推，当绘制完第七行和第八行方框和方块之后，在运行第一个for循环的表达式3时，j的值已经变为4，这样第一个for循环的表达式2就不成立了，此时已经绘制完了整个棋盘，程序就会退出for循环。")])])}),[],!1,null,null,null);t.default=r.exports}}]);